---
# replicaCount configures the number of replicas to run
replicaCount: 1

# image specifies image location, tag and pullPolicy
image:
  repository: quay.io/linki/chaoskube
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# chaoskube is used to configure chaoskube
chaoskube:
  env: {}
  args:
    # kill a pod every 10 minutes
    interval: "10m"
    # only target pods in the test environment
    labels: "environment=test"
    # only consider pods with this annotation
    annotations: "chaos.alpha.kubernetes.io/enabled=true"
    # exclude all DaemonSet pods
    kinds: "!DaemonSet"
    # exclude all pods in the kube-system namespace
    namespaces: "!kube-system"
    # don't kill anything on weekends
    excluded-weekdays: "Sat,Sun"
    # don't kill anything during the night or at lunchtime
    excluded-times-of-day: "22:00-08:00,11:00-13:00"
    # don't kill anything as a joke or on christmas eve
    excluded-days-of-year: "Apr1,Dec24"
    # let's make sure we all agree on what the above times mean
    timezone: "UTC"
    # exclude all pods that haven't been running for at least one hour
    minimum-age: "1h"
    # checks for "chaos.alpha.kubernetes.io/frequency" annotation on pods to determine frequency to terminate
    # eg. setting "chaos.alpha.kubernetes.io/frequency=1/hour" will terminate the pod approximately once per hour
    termination-frequency-annotation: "chaos.alpha.kubernetes.io/frequency"
    # terminate pods for real: this disables dry-run mode which is on by default
    no-dry-run: ""

# serviceAccount can be used to customize the service account which will be crated and used by chaoskube
serviceAccount:
  create: true
  name: ""
  annotations: {}

# podAnnotations can be used to add additional annotations to the pod
podAnnotations: {}

# podSecurityContext is used to customize the security context of the pod
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]

# resources can be used to limit pod compute resources (limits/requests)
resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 10m
#   memory: 16Mi
